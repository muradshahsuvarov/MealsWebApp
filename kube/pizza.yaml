apiVersion: v1
kind: Service
metadata:
  name: pizza-app-service
spec: # Spec defines the behavior of a REST service.
  selector: #  The selector that determines which pods will answer requests sent through the proxy
    app: pizza-app
  ports:
    - port: 80 # Local Port. Kubernetes Service takes requests from port 80 and forward them to the internal port 3000
      name: front-end-port
      targetPort: 3000 # In this case, the Service listens for requests on port 80 and forwards them to port 3000 of the target Pods:
    - port: 81
      name: back-end-port
      targetPort: 5000
  type: LoadBalancer # In this case, the type is LoadBalancer, which makes the exposed Pods accessible from outside the cluster. Picks an appropriate pod to forware an incoming request to. The default Service type is ClusterIP, which makes the exposed Pods only accessible from within the cluster.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizza-app-deployment
spec: # Specifications for the Deployment Resource (Pod Manager). # Spec defines the behavior of a REST service.
  replicas: 5 # It's desired to keep 1 pod running, and healthy
  selector: # Run those pods whose label is pizza-app
    matchLabels:
      app: pizza-app
  template: # Specifications of the POD (Containers running in it). This field defines a label for the Pods that wrap your container. In other words PodTemplate
    metadata:
      labels:
        app: pizza-app # Gives a name to the pod
    spec:
      containers:
        - name: pizzaapp-back-end
          image: 4141472/pizzaapp-back-end:latest
          ports:
            - containerPort: 5000
          imagePullPolicy: Always # Forces the Docker image to be downloaded, even if it was already downloaded.
        - name: pizzaapp-front-end
          image: 4141472/pizzaapp-front-end:latest
          ports:
            - containerPort: 3000
          imagePullPolicy: Always # Forces the Docker image to be downloaded, even if it was already downloaded.